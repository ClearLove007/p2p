package com.spring.util.util;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.concurrent.*;

public class ThreadPoolUtils {

    private static final int corePoolSize = 100;
    private static final int maximumPoolSize = 200;
    private static final int keepAliveTime = 10;
    private static final int capacity = 1024;

    public static ThreadPoolExecutor threadPoolExecutor() {
        return new ThreadPoolExecutor(corePoolSize,maximumPoolSize,keepAliveTime,
                                        TimeUnit.SECONDS,
                                        new LinkedBlockingQueue(capacity),
                                        new MyReject());
    }

    public static ScheduledExecutorService scheduledExecutorService(){
        return Executors.newScheduledThreadPool(1);
    }

    private static class MyReject implements RejectedExecutionHandler{
        private Logger log = LoggerFactory.getLogger(this.getClass());
        @Override
        public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {
            log.warn(r.toString()+"被拒绝");
        }
    }
}
